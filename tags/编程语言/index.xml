<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>编程语言 on 六开箱</title>
    <link>https://lkxed.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in 编程语言 on 六开箱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 25 Apr 2022 12:14:42 +0800</lastBuildDate><atom:link href="https://lkxed.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C 语言：发展简史</title>
      <link>https://lkxed.github.io/posts/how-c-programming-language-has-grown/</link>
      <pubDate>Mon, 25 Apr 2022 12:14:42 +0800</pubDate>
      
      <guid>https://lkxed.github.io/posts/how-c-programming-language-has-grown/</guid>
      <description>下面是我对 &lt;ruby&gt;布莱恩·克尼汉&lt;rt&gt;Brian Kernighan&lt;/rt&gt;&lt;/ruby&gt; 的采访，他（与 &lt;ruby&gt;丹尼斯·里奇&lt;rt&gt;Dennis Ritchie&lt;/rt&gt;&lt;/ruby&gt;）是《&lt;ruby&gt;C 程序设计语言&lt;rt&gt;The C Programming Language&lt;/rt&gt;&lt;/ruby&gt;》一书的共同作者，我们谈及了 C 语言及其 50 年的历史。</description>
    </item>
    
    <item>
      <title>Groovy 对比 Java：创建并初始化 List</title>
      <link>https://lkxed.github.io/posts/creating-lists-groovy-java/</link>
      <pubDate>Tue, 29 Mar 2022 21:40:17 +0800</pubDate>
      
      <guid>https://lkxed.github.io/posts/creating-lists-groovy-java/</guid>
      <description>首先在 Java 中创建并初始化一个整型列表，然后在 Groovy 中做同样的事。</description>
    </item>
    
    <item>
      <title>Groovy 对比 Java：创建并初始化 Map</title>
      <link>https://lkxed.github.io/posts/creating-maps-groovy-java/</link>
      <pubDate>Mon, 21 Mar 2022 09:25:59 +0800</pubDate>
      
      <guid>https://lkxed.github.io/posts/creating-maps-groovy-java/</guid>
      <description>Java 和 Groovy 中的 Map 都是非常通用的，它允许&lt;ruby&gt;关键字&lt;rt&gt;key&lt;/rt&gt;&lt;/ruby&gt;和&lt;ruby&gt;值&lt;rt&gt;value&lt;/rt&gt;&lt;/ruby&gt;为任意类型，只要继承了 &lt;code&gt;Object&lt;/code&gt; 类即可。</description>
    </item>
    
  </channel>
</rss>
